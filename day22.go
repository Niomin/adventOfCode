package main

import (
	"strings"
)

// D22 109792 is too high
func D22() []int {
	q := []string{
		"1,0,1~1,2,1\n0,0,2~2,0,2\n0,2,3~2,2,3\n0,0,4~0,2,4\n2,0,5~2,2,5\n0,1,6~2,1,6\n1,1,8~1,1,9",
		"2,4,151~4,4,151\n5,4,169~5,7,169\n3,5,167~3,7,167\n4,6,197~4,8,197\n6,5,98~6,7,98\n3,8,7~5,8,7\n8,2,293~8,5,293\n2,1,76~2,4,76\n2,6,102~2,9,102\n4,0,201~4,2,201\n1,6,103~1,8,103\n7,5,214~9,5,214\n1,2,213~3,2,213\n4,6,263~4,8,263\n6,0,263~6,0,266\n3,5,145~5,5,145\n6,5,60~6,8,60\n0,6,13~2,6,13\n4,7,277~6,7,277\n5,7,87~5,7,89\n0,7,72~0,9,72\n6,4,48~6,6,48\n7,2,20~9,2,20\n5,4,128~5,7,128\n7,7,257~7,9,257\n6,5,227~9,5,227\n8,4,67~9,4,67\n5,9,236~7,9,236\n3,5,137~6,5,137\n2,3,137~4,3,137\n0,2,63~0,4,63\n0,2,299~1,2,299\n6,5,234~6,7,234\n1,0,137~1,3,137\n6,5,271~6,7,271\n0,2,79~2,2,79\n4,3,297~6,3,297\n0,0,80~0,2,80\n1,9,56~3,9,56\n4,3,49~4,6,49\n9,6,114~9,8,114\n0,5,212~2,5,212\n5,2,161~7,2,161\n4,1,100~4,3,100\n6,6,226~8,6,226\n2,1,63~4,1,63\n1,8,44~3,8,44\n5,3,9~8,3,9\n8,6,240~9,6,240\n6,1,111~7,1,111\n0,5,222~2,5,222\n9,4,150~9,6,150\n4,2,66~4,5,66\n3,9,186~5,9,186\n5,6,20~8,6,20\n6,3,224~6,5,224\n2,8,48~3,8,48\n2,2,18~2,5,18\n4,5,106~6,5,106\n8,6,19~8,7,19\n7,5,175~9,5,175\n5,7,146~5,9,146\n3,3,197~5,3,197\n9,4,25~9,6,25\n6,6,205~9,6,205\n8,0,34~8,3,34\n4,6,224~6,6,224\n2,9,104~4,9,104\n2,4,134~2,6,134\n5,2,209~9,2,209\n5,6,187~7,6,187\n5,9,104~6,9,104\n6,5,139~6,7,139\n6,6,209~6,8,209\n7,4,201~7,8,201\n1,2,45~1,3,45\n3,5,129~5,5,129\n4,1,88~7,1,88\n0,4,1~0,5,1\n7,5,79~9,5,79\n6,0,124~6,0,124\n1,6,108~2,6,108\n7,5,114~7,7,114\n4,0,296~4,0,299\n0,0,65~0,2,65\n8,7,276~8,8,276\n5,7,40~7,7,40\n9,4,101~9,5,101\n3,0,264~5,0,264\n3,0,26~5,0,26\n2,6,151~5,6,151\n0,1,294~0,4,294\n5,4,293~7,4,293\n1,2,298~1,4,298\n5,6,189~5,7,189\n4,0,111~4,3,111\n4,5,109~4,7,109\n2,7,41~4,7,41\n6,1,172~8,1,172\n6,5,50~6,7,50\n9,2,74~9,4,74\n0,0,120~0,0,120\n2,1,1~2,1,3\n5,4,291~8,4,291\n8,1,111~8,2,111\n6,2,95~6,2,96\n9,3,158~9,6,158\n3,3,262~5,3,262\n1,1,308~1,4,308\n5,6,135~5,9,135\n6,6,3~9,6,3\n7,7,39~9,7,39\n2,7,98~4,7,98\n7,6,233~7,9,233\n6,2,119~9,2,119\n3,7,207~3,9,207\n8,4,245~8,5,245\n9,2,136~9,2,138\n7,2,111~7,4,111\n0,8,70~3,8,70\n3,5,217~5,5,217\n4,9,223~5,9,223\n3,2,282~4,2,282\n5,7,258~5,7,260\n4,5,266~4,8,266\n8,4,48~8,4,50\n6,0,173~6,2,173\n4,7,131~4,9,131\n1,9,2~2,9,2\n7,5,17~9,5,17\n0,2,120~1,2,120\n4,1,102~4,3,102\n6,6,101~6,8,101\n5,5,12~5,5,12\n0,0,292~3,0,292\n7,8,119~9,8,119\n7,6,82~8,6,82\n4,2,117~6,2,117\n2,9,220~4,9,220\n8,1,42~9,1,42\n7,9,147~7,9,147\n8,7,125~8,7,127\n2,7,240~2,9,240\n8,0,276~8,2,276\n1,0,251~4,0,251\n0,6,172~1,6,172\n3,9,95~5,9,95\n1,5,61~5,5,61\n8,6,33~8,8,33\n1,7,292~1,7,293\n3,5,147~3,7,147\n0,9,74~1,9,74\n1,2,239~4,2,239\n2,5,146~3,5,146\n2,0,280~2,3,280\n3,6,46~6,6,46\n2,8,245~3,8,245\n3,6,171~7,6,171\n4,2,122~4,3,122\n5,2,301~5,5,301\n4,4,208~5,4,208\n8,6,72~8,7,72\n2,7,232~5,7,232\n4,4,236~4,4,237\n3,3,255~4,3,255\n1,1,107~1,3,107\n0,0,84~0,1,84\n3,4,244~4,4,244\n0,9,5~2,9,5\n3,2,94~6,2,94\n1,8,137~4,8,137\n2,1,291~5,1,291\n4,3,52~4,6,52\n3,6,232~5,6,232\n3,7,63~3,9,63\n5,5,244~7,5,244\n8,1,285~8,2,285\n2,2,172~2,3,172\n6,1,16~6,4,16\n3,3,34~3,6,34\n4,6,91~4,9,91\n1,9,177~3,9,177\n5,2,232~8,2,232\n7,2,207~7,3,207\n7,5,37~9,5,37\n3,4,177~3,6,177\n1,3,136~1,4,136\n4,6,105~4,7,105\n5,9,139~7,9,139\n4,9,244~7,9,244\n5,8,105~8,8,105\n6,4,77~6,6,77\n0,8,11~2,8,11\n3,6,42~3,8,42\n2,3,194~6,3,194\n5,6,119~5,7,119\n0,1,176~2,1,176\n8,1,123~8,4,123\n6,3,10~6,5,10\n0,2,23~2,2,23\n8,4,120~8,5,120\n4,2,210~4,4,210\n5,2,214~7,2,214\n0,4,108~3,4,108\n5,3,295~5,6,295\n6,5,126~6,6,126\n1,5,14~2,5,14\n9,1,152~9,1,152\n8,4,101~8,6,101\n2,5,98~2,5,99\n8,5,180~8,8,180\n2,4,212~2,4,214\n4,3,268~6,3,268\n5,7,36~5,8,36\n6,5,135~6,7,135\n5,5,97~5,7,97\n1,6,298~2,6,298\n4,0,6~6,0,6\n6,0,255~6,2,255\n6,8,9~8,8,9\n4,9,45~6,9,45\n6,6,120~9,6,120\n2,1,32~4,1,32\n9,3,116~9,4,116\n1,4,245~1,6,245\n8,6,235~8,6,237\n2,2,277~5,2,277\n9,5,40~9,6,40\n4,6,255~5,6,255\n8,6,44~8,8,44\n6,9,212~9,9,212\n6,0,3~9,0,3\n3,2,168~3,4,168\n4,2,27~7,2,27\n5,2,103~7,2,103\n3,6,31~3,8,31\n7,1,89~9,1,89\n2,0,290~2,2,290\n3,1,152~3,2,152\n6,5,262~6,7,262\n5,6,138~5,6,140\n7,7,149~9,7,149\n2,3,148~2,5,148\n3,0,30~3,0,32\n3,7,253~3,8,253\n0,5,146~0,7,146\n7,1,229~7,4,229\n8,5,80~8,6,80\n8,8,182~9,8,182\n3,4,125~5,4,125\n0,8,168~2,8,168\n7,4,156~9,4,156\n6,4,119~9,4,119\n4,5,98~4,5,100\n8,2,108~9,2,108\n1,9,250~3,9,250\n6,2,165~6,3,165\n5,6,197~8,6,197\n8,0,214~8,3,214\n8,4,47~8,6,47\n3,2,192~5,2,192\n8,1,254~8,3,254\n2,1,103~2,3,103\n8,5,108~8,8,108\n2,9,243~4,9,243\n4,0,146~4,2,146\n1,3,246~1,7,246\n6,4,179~6,6,179\n2,4,119~2,6,119\n1,6,83~2,6,83\n5,7,72~5,8,72\n8,5,113~9,5,113\n8,5,67~8,5,69\n2,2,110~2,4,110\n3,6,36~3,8,36\n1,8,129~3,8,129\n3,2,56~3,4,56\n1,5,13~2,5,13\n0,1,42~2,1,42\n3,7,6~3,9,6\n5,0,77~5,4,77\n5,2,78~5,3,78\n5,4,192~5,7,192\n3,6,194~5,6,194\n7,6,134~7,8,134\n4,2,139~4,4,139\n1,0,201~3,0,201\n6,2,141~6,4,141\n6,0,65~6,0,66\n5,7,34~6,7,34\n4,4,181~4,4,182\n3,2,75~4,2,75\n4,5,293~4,9,293\n1,2,127~3,2,127\n4,9,183~7,9,183\n5,6,248~5,8,248\n4,3,115~4,6,115\n1,6,97~2,6,97\n1,1,104~3,1,104\n0,1,139~0,4,139\n5,9,79~5,9,81\n3,2,181~5,2,181\n4,2,233~7,2,233\n6,1,64~8,1,64\n0,2,40~1,2,40\n5,5,214~5,8,214\n3,7,163~3,7,165\n8,2,272~8,4,272\n7,3,141~8,3,141\n3,8,242~5,8,242\n0,1,44~0,1,45\n1,9,144~2,9,144\n4,8,114~4,8,115\n3,5,108~3,6,108\n4,4,225~4,5,225\n2,5,276~4,5,276\n8,4,171~8,4,173\n1,5,16~1,7,16\n4,5,94~4,8,94\n7,2,113~7,2,114\n6,2,2~6,4,2\n5,7,14~8,7,14\n2,0,175~2,2,175\n4,3,200~6,3,200\n1,0,35~1,1,35\n5,0,42~8,0,42\n0,7,160~0,8,160\n3,2,2~5,2,2\n5,6,157~5,9,157\n1,7,104~2,7,104\n6,9,68~6,9,68\n3,5,203~4,5,203\n8,4,3~8,4,3\n4,5,223~4,8,223\n5,1,80~5,4,80\n2,4,21~2,4,22\n3,7,278~3,8,278\n6,7,20~7,7,20\n8,2,1~8,4,1\n7,8,139~9,8,139\n8,4,36~8,6,36\n4,6,76~6,6,76\n7,0,102~7,3,102\n8,2,212~8,5,212\n8,7,49~8,8,49\n6,1,32~8,1,32\n6,5,263~7,5,263\n7,4,132~7,6,132\n1,5,171~1,7,171\n7,6,121~9,6,121\n3,4,96~3,6,96\n5,5,254~5,8,254\n7,2,259~7,3,259\n1,0,295~1,3,295\n3,2,99~3,4,99\n4,6,65~4,8,65\n2,4,104~2,4,104\n7,5,2~9,5,2\n1,1,287~1,1,289\n5,2,253~5,2,255\n1,7,288~1,9,288\n5,3,65~7,3,65\n5,3,256~7,3,256\n0,3,149~0,5,149\n3,6,153~3,9,153\n3,5,166~5,5,166\n5,1,258~5,3,258\n0,5,148~0,8,148\n8,0,226~9,0,226\n9,5,13~9,5,13\n3,8,156~4,8,156\n9,0,28~9,3,28\n6,4,285~6,6,285\n3,1,116~3,4,116\n4,9,158~5,9,158\n5,7,273~8,7,273\n2,5,10~2,8,10\n5,0,41~5,3,41\n4,4,50~4,6,50\n7,2,23~7,4,23\n3,4,55~3,6,55\n3,8,125~6,8,125\n5,1,69~5,3,69\n4,3,11~5,3,11\n7,1,92~7,4,92\n5,8,210~5,9,210\n2,8,140~2,9,140\n2,6,86~4,6,86\n8,4,244~8,7,244\n8,2,237~8,4,237\n4,6,269~7,6,269\n0,4,116~1,4,116\n0,3,68~0,5,68\n1,2,301~4,2,301\n0,1,69~0,3,69\n8,0,281~8,3,281\n5,7,255~5,8,255\n4,4,268~4,6,268\n4,7,8~4,8,8\n8,2,98~8,3,98\n2,0,80~3,0,80\n4,7,67~4,7,69\n6,3,133~8,3,133\n4,9,129~7,9,129\n2,0,55~4,0,55\n6,8,177~8,8,177\n0,4,115~1,4,115\n6,4,245~7,4,245\n3,3,161~4,3,161\n2,8,109~5,8,109\n6,5,145~6,5,147\n1,6,143~1,9,143\n1,8,115~3,8,115\n3,4,271~5,4,271\n3,8,8~3,9,8\n6,7,36~7,7,36\n0,2,252~0,4,252\n4,1,109~4,2,109\n1,1,247~3,1,247\n3,2,149~5,2,149\n6,4,181~6,4,184\n1,1,81~1,4,81\n0,2,42~2,2,42\n3,3,7~5,3,7\n0,5,73~0,6,73\n9,8,66~9,9,66\n7,0,132~9,0,132\n1,4,119~1,7,119\n3,4,74~4,4,74\n1,2,165~3,2,165\n5,7,160~7,7,160\n5,5,198~7,5,198\n4,4,10~5,4,10\n5,1,252~8,1,252\n8,3,64~8,6,64\n6,3,71~9,3,71\n2,7,233~3,7,233\n5,7,30~7,7,30\n2,7,276~4,7,276\n2,2,115~2,4,115\n5,1,122~6,1,122\n2,8,222~2,9,222\n2,1,157~5,1,157\n6,7,31~8,7,31\n3,8,175~3,9,175\n1,2,26~1,2,29\n5,2,180~5,5,180\n5,5,142~7,5,142\n7,0,73~7,3,73\n9,6,117~9,8,117\n1,4,113~2,4,113\n0,8,2~0,8,4\n7,1,207~9,1,207\n4,7,134~4,9,134\n3,2,263~5,2,263\n7,7,69~7,8,69\n7,7,63~7,8,63\n4,7,235~4,8,235\n4,2,16~4,4,16\n3,6,49~3,9,49\n8,1,36~8,1,39\n2,0,46~2,3,46\n6,6,143~6,6,146\n2,1,101~2,3,101\n4,1,103~4,2,103\n0,0,71~0,2,71\n7,3,282~7,6,282\n4,4,148~4,6,148\n0,2,245~2,2,245\n1,7,213~3,7,213\n4,0,262~7,0,262\n2,8,53~4,8,53\n1,6,290~1,8,290\n0,8,55~2,8,55\n8,1,255~8,2,255\n5,4,233~5,6,233\n2,1,53~4,1,53\n2,0,61~2,2,61\n1,2,300~1,4,300\n1,5,100~1,7,100\n2,4,3~4,4,3\n1,9,70~1,9,72\n8,7,42~8,9,42\n2,8,67~5,8,67\n7,3,142~9,3,142\n9,6,6~9,6,9\n3,7,241~3,7,243\n5,0,32~5,0,34\n0,6,292~0,6,294\n9,1,281~9,4,281\n5,5,204~5,7,204\n4,0,113~6,0,113\n5,9,224~8,9,224\n4,1,148~6,1,148\n7,5,128~7,7,128\n7,4,79~9,4,79\n1,6,294~1,7,294\n5,5,184~5,7,184\n4,8,159~4,8,162\n6,2,110~6,3,110\n0,9,7~1,9,7\n7,8,239~9,8,239\n4,6,284~4,8,284\n5,2,162~6,2,162\n4,0,15~4,2,15\n1,4,107~2,4,107\n1,4,9~4,4,9\n1,0,37~1,2,37\n8,1,284~9,1,284\n1,6,72~1,8,72\n4,6,134~6,6,134\n7,3,242~9,3,242\n7,1,145~7,3,145\n8,5,114~8,8,114\n3,5,149~4,5,149\n0,3,288~0,5,288\n7,2,279~9,2,279\n6,4,73~8,4,73\n4,5,121~6,5,121\n0,6,291~0,8,291\n3,4,71~5,4,71\n9,1,46~9,3,46\n5,1,275~5,2,275\n9,6,242~9,9,242\n4,8,251~7,8,251\n1,9,66~3,9,66\n4,6,135~4,6,136\n7,0,282~7,2,282\n1,8,3~3,8,3\n6,6,251~8,6,251\n1,9,218~2,9,218\n3,4,234~5,4,234\n5,8,259~5,9,259\n6,3,68~6,6,68\n3,7,173~3,9,173\n2,9,215~4,9,215\n9,7,1~9,9,1\n8,1,257~9,1,257\n7,0,30~7,2,30\n6,6,102~6,6,103\n6,1,257~6,3,257\n1,4,286~1,7,286\n7,1,107~7,4,107\n3,6,281~5,6,281\n6,9,64~9,9,64\n8,7,45~8,8,45\n2,9,263~5,9,263\n5,2,44~7,2,44\n7,6,291~7,8,291\n3,3,43~3,5,43\n4,0,167~7,0,167\n8,1,169~8,4,169\n5,4,121~7,4,121\n2,2,296~2,4,296\n7,5,287~8,5,287\n1,2,196~4,2,196\n7,1,1~7,1,2\n7,0,131~7,2,131\n9,5,11~9,8,11\n3,2,251~3,2,252\n9,7,153~9,7,154\n4,2,114~4,3,114\n2,7,155~5,7,155\n0,2,255~0,5,255\n1,5,83~3,5,83\n7,0,285~9,0,285\n8,5,198~8,7,198\n3,1,119~3,1,122\n4,4,96~5,4,96\n4,8,5~6,8,5\n3,2,241~5,2,241\n1,5,64~1,5,66\n7,2,239~7,3,239\n2,4,95~2,4,97\n1,2,19~3,2,19\n5,5,49~5,8,49\n6,4,146~9,4,146\n4,0,257~6,0,257\n5,6,59~5,6,61\n5,3,175~5,5,175\n5,8,261~7,8,261\n9,2,43~9,4,43\n2,8,256~3,8,256\n7,2,133~9,2,133\n7,7,12~9,7,12\n8,0,273~8,2,273\n1,3,238~1,6,238\n4,1,159~4,1,161\n2,3,134~5,3,134\n4,9,99~6,9,99\n0,2,291~0,4,291\n3,2,13~6,2,13\n8,9,45~9,9,45\n2,0,303~4,0,303\n1,5,249~3,5,249\n0,8,51~2,8,51\n3,2,188~5,2,188\n5,9,262~8,9,262\n6,7,255~8,7,255\n0,5,237~0,7,237\n1,3,256~1,4,256\n2,5,237~2,5,240\n1,3,108~1,3,110\n8,5,285~8,8,285\n5,1,250~5,4,250\n9,0,45~9,1,45\n7,6,112~9,6,112\n3,2,27~3,3,27\n5,2,125~5,3,125\n2,4,211~2,7,211\n9,4,209~9,7,209\n6,5,177~6,5,178\n4,7,62~7,7,62\n0,6,119~0,9,119\n2,4,26~2,4,28\n6,3,94~8,3,94\n5,5,147~5,6,147\n7,1,173~7,3,173\n7,0,105~9,0,105\n2,2,129~3,2,129\n0,0,30~1,0,30\n8,3,154~8,5,154\n4,0,64~4,0,67\n5,1,298~5,1,298\n9,2,134~9,5,134\n0,5,236~2,5,236\n3,7,159~3,8,159\n6,0,205~6,0,207\n2,3,32~2,4,32\n4,5,235~6,5,235\n4,6,59~4,9,59\n2,4,7~2,6,7\n9,4,160~9,7,160\n4,9,185~4,9,185\n0,4,132~3,4,132\n0,4,253~4,4,253\n7,1,288~9,1,288\n2,0,97~3,0,97\n4,7,200~4,7,202\n1,0,148~4,0,148\n5,0,163~5,2,163\n0,1,83~0,3,83\n3,6,240~3,8,240\n6,4,82~6,6,82\n0,5,70~0,7,70\n5,7,66~8,7,66\n4,2,189~4,5,189\n6,0,19~9,0,19\n5,1,197~5,2,197\n1,1,202~3,1,202\n2,2,31~2,4,31\n1,9,245~2,9,245\n9,1,26~9,1,27\n7,0,223~9,0,223\n3,2,34~6,2,34\n1,8,166~1,8,167\n0,6,299~0,6,300\n0,2,59~4,2,59\n2,4,6~2,6,6\n3,4,221~3,6,221\n4,9,92~6,9,92\n8,2,189~8,4,189\n6,1,11~6,3,11\n6,3,175~6,5,175\n8,4,275~8,6,275\n3,0,96~3,3,96\n5,8,143~8,8,143\n9,4,28~9,5,28\n6,9,267~8,9,267\n2,5,60~4,5,60\n4,1,61~6,1,61\n5,8,52~7,8,52\n5,7,61~7,7,61\n1,8,164~3,8,164\n6,0,45~7,0,45\n3,1,246~3,3,246\n5,3,251~5,3,253\n4,9,47~7,9,47\n5,2,211~5,3,211\n4,8,258~6,8,258\n3,9,292~5,9,292\n4,5,103~4,7,103\n2,1,6~3,1,6\n4,7,132~4,7,132\n0,6,110~3,6,110\n0,1,293~2,1,293\n4,2,160~4,2,162\n3,3,209~3,5,209\n0,1,41~0,3,41\n6,1,108~6,5,108\n3,8,104~5,8,104\n7,7,146~7,9,146\n2,4,79~2,7,79\n2,1,44~2,4,44\n2,5,231~4,5,231\n0,7,172~2,7,172\n2,4,297~2,6,297\n6,4,247~6,5,247\n4,4,288~6,4,288\n6,2,225~6,4,225\n6,1,163~8,1,163\n2,3,145~5,3,145\n7,7,254~7,8,254\n4,8,128~4,9,128\n1,3,286~3,3,286\n4,1,14~6,1,14\n6,6,232~8,6,232\n3,3,59~5,3,59\n4,4,154~7,4,154\n3,4,54~3,6,54\n5,3,76~5,5,76\n6,4,187~8,4,187\n6,3,143~8,3,143\n6,3,265~6,5,265\n1,9,180~2,9,180\n8,1,96~8,5,96\n2,7,138~2,9,138\n0,5,76~0,5,78\n2,5,274~2,7,274\n5,7,183~7,7,183\n4,0,260~8,0,260\n8,6,39~9,6,39\n3,3,40~3,5,40\n8,3,159~8,7,159\n6,9,185~8,9,185\n7,8,13~9,8,13\n3,3,30~3,6,30\n7,1,205~7,4,205\n8,9,75~8,9,77\n7,0,217~7,2,217\n6,3,261~6,6,261\n5,4,32~7,4,32\n6,4,162~8,4,162\n5,7,81~7,7,81\n1,0,248~1,1,248\n2,1,9~2,2,9\n0,5,166~2,5,166\n7,3,121~9,3,121\n0,0,202~1,0,202\n8,7,46~9,7,46\n3,0,142~4,0,142\n6,7,253~6,7,254\n3,1,33~4,1,33\n2,2,185~5,2,185\n6,7,37~9,7,37\n6,2,63~8,2,63\n0,5,159~0,7,159\n3,0,121~6,0,121\n5,4,23~5,6,23\n7,7,109~9,7,109\n6,4,26~7,4,26\n0,1,286~0,4,286\n7,7,260~7,8,260\n7,7,204~7,7,205\n7,2,176~9,2,176\n9,6,151~9,9,151\n2,6,252~2,8,252\n6,5,40~8,5,40\n7,7,17~8,7,17\n8,5,61~9,5,61\n0,2,81~0,2,81\n3,0,166~5,0,166\n6,0,267~6,0,269\n6,6,69~6,6,70\n1,5,102~1,5,105\n6,3,177~8,3,177\n2,4,62~2,6,62\n6,4,264~6,5,264\n3,4,62~3,6,62\n4,6,157~4,9,157\n6,4,143~9,4,143\n8,8,116~8,9,116\n6,6,236~6,8,236\n9,5,228~9,7,228\n5,1,5~5,4,5\n3,5,58~3,6,58\n3,4,204~3,7,204\n2,9,221~3,9,221\n6,6,229~8,6,229\n4,4,123~5,4,123\n2,6,14~2,8,14\n1,6,89~4,6,89\n4,3,73~6,3,73\n7,3,97~7,3,99\n4,6,10~6,6,10\n5,4,222~8,4,222\n6,3,59~6,6,59\n5,7,7~6,7,7\n4,2,38~5,2,38\n3,1,163~3,4,163\n4,5,174~4,7,174\n7,5,210~8,5,210\n0,1,43~0,3,43\n0,5,173~1,5,173\n2,6,294~2,7,294\n7,9,85~7,9,88\n1,2,217~1,4,217\n7,2,235~8,2,235\n1,5,112~1,7,112\n5,6,117~8,6,117\n2,0,299~2,1,299\n7,6,143~7,6,146\n4,3,168~4,5,168\n4,4,226~4,7,226\n7,6,208~7,6,210\n9,1,149~9,4,149\n3,6,11~5,6,11\n4,5,262~4,7,262\n2,8,73~2,8,76\n7,1,21~7,4,21\n5,2,279~5,3,279\n7,4,43~7,5,43\n0,1,180~0,3,180\n8,6,163~8,9,163\n6,2,143~8,2,143\n6,9,65~8,9,65\n6,8,222~8,8,222\n7,7,293~8,7,293\n7,1,295~7,4,295\n5,6,218~5,9,218\n3,1,171~3,3,171\n9,6,86~9,8,86\n1,4,240~3,4,240\n5,2,29~5,4,29\n3,0,266~3,0,268\n9,7,120~9,9,120\n7,5,220~7,9,220\n5,7,282~5,9,282\n8,8,188~8,9,188\n9,3,120~9,5,120\n7,7,138~7,8,138\n9,0,30~9,1,30\n6,6,79~6,8,79\n7,5,231~9,5,231\n7,8,236~9,8,236\n5,4,50~5,5,50\n3,9,99~3,9,102\n4,7,159~6,7,159\n6,0,8~7,0,8\n5,6,211~5,8,211\n3,5,163~5,5,163\n5,3,132~8,3,132\n2,7,60~4,7,60\n4,1,2~4,1,2\n9,7,131~9,7,134\n8,5,110~8,6,110\n7,1,48~7,3,48\n7,4,161~9,4,161\n1,1,294~2,1,294\n9,5,15~9,7,15\n5,1,136~5,3,136\n0,2,155~0,4,155\n7,7,275~7,9,275\n2,0,112~2,3,112\n3,5,7~3,7,7\n5,8,102~5,9,102\n7,0,106~8,0,106\n2,4,165~2,6,165\n3,0,50~3,1,50\n4,0,204~6,0,204\n3,5,74~3,5,76\n3,1,254~3,1,257\n4,4,70~7,4,70\n3,0,102~3,2,102\n5,3,146~6,3,146\n8,7,69~8,9,69\n4,0,63~6,0,63\n0,5,234~2,5,234\n8,0,25~8,1,25\n1,7,1~3,7,1\n8,7,128~9,7,128\n9,7,49~9,7,51\n4,3,264~6,3,264\n2,6,59~2,6,60\n8,2,144~8,2,146\n7,4,279~7,6,279\n5,5,290~7,5,290\n3,5,170~3,9,170\n3,1,155~3,2,155\n1,1,49~4,1,49\n0,5,6~0,6,6\n4,7,111~4,7,113\n5,7,107~5,8,107\n6,2,17~8,2,17\n4,5,229~4,7,229\n6,7,147~8,7,147\n7,2,105~9,2,105\n2,2,182~3,2,182\n9,6,229~9,6,230\n1,0,115~3,0,115\n5,2,271~8,2,271\n5,0,80~6,0,80\n8,8,5~8,8,6\n6,6,142~8,6,142\n1,4,302~1,4,305\n7,1,298~7,3,298\n3,2,194~6,2,194\n4,2,237~7,2,237\n4,9,103~6,9,103\n3,9,96~6,9,96\n0,2,216~2,2,216\n7,4,46~7,4,48\n8,7,286~8,7,286\n2,6,95~4,6,95\n4,0,91~4,2,91\n5,7,84~5,7,84\n6,8,61~6,9,61\n8,9,70~8,9,72\n3,1,253~3,3,253\n6,0,195~6,3,195\n3,1,243~3,3,243\n9,3,68~9,4,68\n7,1,275~7,2,275\n5,7,108~6,7,108\n6,5,69~6,5,70\n3,4,131~3,6,131\n0,1,60~0,4,60\n2,5,96~2,7,96\n1,5,1~1,5,3\n0,1,283~3,1,283\n4,7,268~4,8,268\n0,8,14~0,8,16\n7,8,294~9,8,294\n1,6,86~1,6,87\n8,3,78~9,3,78\n3,1,98~5,1,98\n5,2,68~5,4,68\n0,2,66~0,4,66\n7,8,54~7,8,55\n7,2,240~7,2,242\n6,1,33~9,1,33\n6,7,206~9,7,206\n7,6,180~7,9,180\n5,5,149~8,5,149\n7,0,133~9,0,133\n3,0,24~3,2,24\n7,0,76~7,0,78\n0,8,171~1,8,171\n7,3,41~7,6,41\n1,7,105~3,7,105\n3,0,79~5,0,79\n0,0,178~0,2,178\n1,6,235~3,6,235\n3,0,62~3,0,63\n1,3,282~3,3,282\n5,8,2~8,8,2\n3,5,39~3,7,39\n4,5,96~6,5,96\n8,6,259~8,8,259\n4,0,120~4,3,120\n2,9,55~5,9,55\n7,5,250~7,7,250\n3,0,145~5,0,145\n2,2,157~4,2,157\n4,8,212~4,9,212\n3,5,45~3,7,45\n3,2,73~3,5,73\n7,4,224~7,4,227\n7,5,49~9,5,49\n2,4,16~2,5,16\n2,4,162~2,6,162\n4,3,82~7,3,82\n4,3,214~4,5,214\n0,9,242~2,9,242\n3,3,55~4,3,55\n5,7,247~8,7,247\n3,5,36~4,5,36\n4,1,85~4,3,85\n1,7,209~3,7,209\n1,2,247~1,3,247\n5,9,2~7,9,2\n2,6,56~3,6,56\n9,4,115~9,6,115\n0,3,137~0,5,137\n4,3,219~4,3,219\n4,4,131~4,6,131\n2,0,102~2,2,102\n6,6,174~6,9,174\n5,5,9~5,7,9\n3,6,251~3,8,251\n0,6,57~0,8,57\n7,2,130~7,5,130\n1,5,289~1,5,289\n1,6,58~2,6,58\n3,7,69~3,8,69\n3,4,219~6,4,219\n7,6,22~7,6,24\n2,4,207~4,4,207\n9,0,278~9,0,280\n6,0,18~6,2,18\n8,0,109~8,0,111\n2,0,199~2,2,199\n8,5,232~9,5,232\n7,5,207~7,8,207\n3,3,62~4,3,62\n9,0,290~9,3,290\n3,1,26~3,3,26\n7,5,288~7,8,288\n1,8,138~1,8,140\n7,1,103~9,1,103\n3,2,35~4,2,35\n7,0,136~8,0,136\n2,2,100~2,4,100\n4,0,193~4,3,193\n3,0,58~3,0,60\n3,6,176~3,9,176\n2,6,159~2,8,159\n2,6,106~5,6,106\n4,3,211~4,6,211\n3,8,208~3,8,210\n1,5,57~3,5,57\n6,2,268~7,2,268\n8,6,246~8,8,246\n3,5,195~6,5,195\n1,0,1~3,0,1\n2,6,271~5,6,271\n3,6,195~3,8,195\n6,1,126~8,1,126\n3,4,277~3,6,277\n1,3,250~1,4,250\n0,1,152~0,4,152\n2,2,299~2,5,299\n7,4,297~7,6,297\n2,3,144~5,3,144\n5,2,274~6,2,274\n7,0,162~7,2,162\n9,2,25~9,2,27\n1,0,117~1,2,117\n1,5,243~1,7,243\n1,6,61~3,6,61\n6,7,130~7,7,130\n1,5,220~4,5,220\n0,8,162~0,9,162\n3,2,30~3,2,32\n7,5,253~9,5,253\n6,4,127~6,6,127\n6,4,35~6,4,37\n0,9,52~3,9,52\n0,3,70~0,3,70\n0,0,68~0,0,70\n6,3,42~9,3,42\n2,1,302~4,1,302\n2,6,121~2,7,121\n4,3,259~6,3,259\n3,2,160~3,4,160\n5,4,35~5,6,35\n7,4,204~7,6,204\n3,4,48~3,6,48\n3,2,210~3,4,210\n6,7,4~6,8,4\n0,2,242~2,2,242\n8,3,10~8,3,11\n3,0,141~3,3,141\n6,6,5~8,6,5\n1,5,92~1,7,92\n1,8,112~4,8,112\n8,7,1~8,9,1\n6,6,123~6,8,123\n3,5,84~5,5,84\n0,3,182~0,3,184\n3,6,41~4,6,41\n8,2,12~8,4,12\n7,3,243~7,5,243\n5,9,82~8,9,82\n2,6,239~2,7,239\n6,5,283~8,5,283\n0,5,248~0,7,248\n3,4,255~3,4,257\n7,6,74~7,8,74\n2,4,92~2,6,92\n4,7,42~4,9,42\n0,3,4~0,5,4\n7,9,6~9,9,6\n5,4,93~7,4,93\n4,2,163~4,2,164\n7,0,220~7,4,220\n0,2,25~0,3,25\n4,1,199~5,1,199\n0,4,112~2,4,112\n6,2,36~6,3,36\n2,9,246~5,9,246\n7,7,222~7,7,222\n5,1,120~5,3,120\n3,9,209~6,9,209\n1,1,109~1,2,109\n9,4,103~9,6,103\n2,5,252~2,5,252\n3,0,295~5,0,295\n8,0,277~9,0,277\n2,0,301~4,0,301\n1,0,129~1,3,129\n6,7,217~8,7,217\n2,3,102~3,3,102\n1,3,170~1,6,170\n0,4,103~2,4,103\n4,3,64~5,3,64\n0,8,118~2,8,118\n4,2,266~6,2,266\n8,7,265~8,9,265\n0,5,290~0,5,291\n8,3,152~8,6,152\n2,5,20~2,5,22\n0,0,52~3,0,52\n1,9,290~3,9,290\n7,5,59~7,7,59\n5,7,75~5,9,75\n1,4,173~1,4,176\n2,1,296~5,1,296\n3,2,248~5,2,248\n7,5,300~7,5,302\n6,6,176~6,6,178\n2,2,243~2,3,243\n2,0,207~4,0,207\n1,0,33~1,2,33\n8,2,134~8,3,134\n1,5,120~1,6,120\n5,5,172~7,5,172\n0,4,145~0,5,145\n9,2,282~9,2,285\n0,7,247~2,7,247\n8,9,4~8,9,5\n8,4,241~8,6,241\n2,5,118~4,5,118\n7,5,60~8,5,60\n6,6,73~7,6,73\n8,0,229~8,0,232\n4,6,56~7,6,56\n0,9,67~2,9,67\n7,7,41~7,7,44\n2,6,237~3,6,237\n7,9,89~9,9,89\n5,5,77~5,9,77\n4,6,260~4,8,260\n2,7,215~2,7,217\n5,3,139~7,3,139\n2,6,291~2,8,291\n1,2,201~3,2,201\n7,1,273~7,4,273\n0,2,247~0,2,249\n3,5,201~5,5,201\n0,1,66~0,1,66\n1,3,169~4,3,169\n7,2,29~9,2,29\n5,4,33~8,4,33\n2,9,281~5,9,281\n5,1,278~8,1,278\n2,3,24~2,5,24\n0,4,141~0,4,143\n0,0,142~0,2,142\n4,6,274~5,6,274\n0,2,124~0,4,124\n1,0,204~2,0,204\n3,5,282~3,6,282\n9,6,123~9,9,123\n3,1,114~4,1,114\n5,3,299~5,6,299\n7,7,84~9,7,84\n3,3,6~3,5,6\n0,3,181~0,3,181\n2,3,75~4,3,75\n1,5,5~1,6,5\n2,4,241~5,4,241\n6,7,252~6,8,252\n1,3,117~3,3,117\n4,2,280~4,2,280\n5,8,140~5,9,140\n3,2,124~5,2,124\n0,0,119~1,0,119\n4,4,178~5,4,178\n9,7,244~9,9,244\n7,5,99~9,5,99\n7,2,110~9,2,110\n3,3,258~3,3,260\n0,7,158~2,7,158\n0,5,140~0,7,140\n4,7,225~5,7,225\n7,7,67~7,9,67\n7,3,283~7,3,284\n5,0,29~7,0,29\n8,6,124~8,7,124\n3,2,164~3,3,164\n3,1,138~6,1,138\n0,6,173~0,6,173\n4,6,55~5,6,55\n2,4,81~2,8,81\n7,2,25~7,4,25\n5,9,182~7,9,182\n2,5,85~3,5,85\n4,6,280~4,9,280\n7,1,22~8,1,22\n0,0,72~1,0,72\n8,5,257~8,7,257\n1,4,49~3,4,49\n1,0,29~3,0,29\n1,9,247~1,9,248\n7,6,122~7,6,125\n3,2,260~5,2,260\n6,1,110~7,1,110\n2,8,126~4,8,126\n0,2,21~2,2,21\n0,4,295~0,4,296\n1,1,284~4,1,284\n2,5,245~5,5,245\n0,5,51~3,5,51\n1,2,122~3,2,122\n1,4,12~1,4,14\n7,4,276~7,4,278\n5,8,14~7,8,14\n3,8,161~3,9,161\n1,2,284~1,4,284\n4,7,71~4,7,74\n5,7,216~8,7,216\n8,8,52~8,8,54\n6,5,20~8,5,20\n9,3,77~9,5,77\n4,2,159~5,2,159\n5,5,68~5,7,68\n5,7,70~5,9,70\n1,7,95~4,7,95\n7,3,26~9,3,26\n6,4,27~6,7,27\n2,3,257~4,3,257\n5,5,4~8,5,4\n3,8,45~3,8,47\n6,2,167~8,2,167\n1,6,8~1,7,8\n7,6,8~8,6,8\n6,4,38~6,6,38\n2,7,100~2,9,100\n4,1,216~4,4,216\n9,1,212~9,3,212\n5,2,14~5,4,14\n1,5,240~1,5,242\n1,4,169~3,4,169\n6,2,28~6,4,28\n9,3,282~9,6,282\n9,5,207~9,7,207\n0,5,54~0,7,54\n4,5,237~4,7,237\n4,9,1~4,9,3\n0,3,293~2,3,293\n2,1,287~2,2,287\n7,8,137~7,9,137\n1,9,214~4,9,214\n5,6,302~5,8,302\n4,1,29~4,4,29\n4,6,138~4,9,138\n2,0,147~4,0,147\n4,2,62~4,2,64\n4,2,283~6,2,283\n3,4,162~3,7,162\n6,2,104~6,4,104\n1,6,249~3,6,249\n0,4,134~1,4,134\n8,3,192~8,3,192\n5,9,268~7,9,268\n0,0,53~1,0,53\n0,2,121~0,2,123\n9,1,23~9,4,23\n0,6,297~0,9,297\n3,1,22~3,3,22\n4,4,146~4,6,146\n4,8,1~5,8,1\n7,2,45~8,2,45\n3,9,50~6,9,50\n8,0,21~8,2,21\n4,2,105~4,2,107\n0,6,289~2,6,289\n3,4,280~3,4,282\n8,7,161~8,9,161\n2,4,84~2,4,86\n2,8,292~2,9,292\n6,0,60~6,3,60",
	}

	var res []int

	for _, qq := range q {
		input := strings.Split(qq, "\n")
		bricks, space, vert := d22parse(input)
		res = append(res, d22p1(bricks, space, vert))
		res = append(res, d22p2(bricks, space, vert))
	}

	return res
}

type d22b struct {
	x1, x2 int
	y1, y2 int
	z1, z2 int
}

type d22s [310][10][10]*d22b
type d22v [310]map[*d22b]bool

func d22p2(bricks []*d22b, space *d22s, vert *d22v) int {
	d22makeMove(vert, space)

	supported := d22collectSupported(bricks, space)
	res := 0
	for _, brick := range bricks {
		success := false
		for br := range supported[brick] {
			if !d22hasSupport(br, space, nil) {
				success = true
			}
		}
		if !success {
			continue
		}
		res += len(d22collectChain(brick, supported, space, make(map[*d22b]bool)))
	}

	return res
}

func d22collectChain(brick *d22b, supported map[*d22b]map[*d22b]bool, space *d22s, chain map[*d22b]bool) map[*d22b]bool {
	for br := range supported[brick] {
		if !d22hasSupport(br, space, chain) {
			chain = d22collectChain(br, supported, space, chain)
			chain[br] = true
		}
	}

	return chain
}

func d22p1(bricks []*d22b, space *d22s, vert *d22v) int {
	d22makeMove(vert, space)

	supported := d22collectSupported(bricks, space)
	res := 0
	for _, brick := range bricks {
		failed := false
		for br := range supported[brick] {
			if !d22hasSupport(br, space, nil) {
				failed = true
			}
		}
		if !failed {
			res++
		}
	}

	return res
}

func d22collectSupported(bricks []*d22b, space *d22s) map[*d22b]map[*d22b]bool {
	res := make(map[*d22b]map[*d22b]bool, len(bricks))

	for _, brick := range bricks {
		res[brick] = d22getSupported(brick, space)
	}
	return res
}

func d22parse(input []string) ([]*d22b, *d22s, *d22v) {
	bricks := make([]*d22b, 0, len(input))
	var s d22s
	space := &s
	var v d22v
	vert := &v

	for _, b := range input {
		b_ := strings.Split(b, "~")
		b1, b2 := parseIntArray(b_[0], ","), parseIntArray(b_[1], ",")
		brick := &d22b{
			x1: min(b1[0], b2[0]),
			x2: max(b1[0], b2[0]),
			y1: min(b1[1], b2[1]),
			y2: max(b1[1], b2[1]),
			z1: min(b1[2], b2[2]),
			z2: max(b1[2], b2[2]),
		}

		d22initBrick(brick, space, vert)
		bricks = append(bricks, brick)
	}
	return bricks, space, vert
}

func d22makeMove(vert *d22v, space *d22s) {
	moved := true
	for moved {
		moved = false
		for z, bricksOnLine := range vert {
			if moved {
				break
			}
			if len(bricksOnLine) == 0 || z == 0 {
				continue
			}
			for brick := range bricksOnLine {
				canFall := d22tryFall(brick, space)
				if !canFall {
					continue
				}
				d22moveBrick(brick, space)
				delete(vert[brick.z2+1], brick)
				d22vs(vert, z-1, brick)

				moved = true
				break
			}
		}
	}
}

func d22hasSupport(brick *d22b, space *d22s, chain map[*d22b]bool) bool {
	z := min(brick.z1, brick.z2)
	if z == 0 {
		return true
	}
	support := make(map[*d22b]bool, 10)
	for x := brick.x1; x <= brick.x2; x++ {
		for y := brick.y1; y <= brick.y2; y++ {
			br := space[z-1][x][y]
			if br != nil && (chain == nil || !chain[br]) {
				support[br] = true
			}
		}
	}
	return len(support) > 1
}

func d22getSupported(brick *d22b, space *d22s) map[*d22b]bool {
	support := make(map[*d22b]bool, 10)
	for x := brick.x1; x <= brick.x2; x++ {
		for y := brick.y1; y <= brick.y2; y++ {
			if space[brick.z2+1][x][y] != nil {
				support[space[brick.z2+1][x][y]] = true
			}
		}
	}
	return support
}

func d22moveBrick(brick *d22b, space *d22s) {
	brick.z1--
	for x := brick.x1; x <= brick.x2; x++ {
		for y := brick.y1; y <= brick.y2; y++ {
			space[brick.z2][x][y] = nil
			space[brick.z1][x][y] = brick
		}
	}
	brick.z2--
}

func d22tryFall(brick *d22b, space *d22s) bool {
	if brick.z1 == 0 {
		return false
	}
	for x := brick.x1; x <= brick.x2; x++ {
		for y := brick.y1; y <= brick.y2; y++ {
			if space[brick.z1-1][x][y] != nil {
				return false
			}
		}
	}
	return true
}

func d22initBrick(brick *d22b, space *d22s, vert *d22v) {
	for z := brick.z1; z <= brick.z2; z++ {
		d22vs(vert, z, brick)
		for x := brick.x1; x <= brick.x2; x++ {
			for y := brick.y1; y <= brick.y2; y++ {
				space[z][x][y] = brick
			}
		}
	}
}

func d22vs(vert *d22v, z int, brick *d22b) {
	if vert[z] == nil {
		vert[z] = make(map[*d22b]bool)
	}
	vert[z][brick] = true
}
